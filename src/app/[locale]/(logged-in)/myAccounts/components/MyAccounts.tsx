"use client";
import React, { useEffect, useState } from "react";
import HeaderPages from "@/app/components/generals/HeaderPages";
import { useTranslations } from "next-intl";
import { InfoAccounts } from "../../accountLogin/components/moskData";
import ButtonPrimary from "@/app/components/generals/ButtonPrimary";
import { useRouter } from "next/navigation";
import Link from "next/link";
import { ThirdwebSDK, Web3Button, ThirdwebProvider } from "@thirdweb-dev/react";
import abiAccount from "@/abis/abiAccount.json";
import { ethers } from "ethers";
import abiMembers from "@/abis/abiMembers.json";
import abiPoi from "@/abis/abiPoi.json";
import CryptoJS from "crypto-js";
import ModalComponent from "@/app/components/generals/ModalComponent";
import "./buttonStyle.css";

type Props = {
  dataAccounts: InfoAccounts[];
};

const MyAccounts = ({ dataAccounts }: Props) => {
  const t = useTranslations();
  const router = useRouter();
  const wallet = localStorage.getItem("wallet");
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [accountName, setAccountName] = useState(null);
  const idAccount = localStorage.getItem("idAccount");
  const [totalRewards, setTotalRewards] = useState(0)
  const [totalPayedRewards, setTotalPayedRewards] = useState(0)

  const ButtonCreateAccount = () => {
    console.log("create account");
    router.push(`/myAccounts/createNewAccount`);
  };

  const [nfts, setNfts] = useState({
    status: false,
    data: [],
  });
  const [membresiaAlta, setMembresiaAlta] = useState([]);
  const [nombreRefferal, setNombreRefferal] = useState([]);
  const [nombreCuentaRefferal, setNombreCuentaRefferal] = useState([]);
  const [idRefferal, setIdRefferal] = useState([]);
  const [volDirect, setVolDirect] = useState([]);
  const [volGlobal, setVolGlobal] = useState([]);

  const decryptData = (encryptedHex) => {
    const encryptedBytes = CryptoJS.enc.Hex.parse(encryptedHex);
    const secretKey = process.env.SECRET_KEY;
    const decrypted = CryptoJS.AES.decrypt({ ciphertext: encryptedBytes }, CryptoJS.enc.Hex.parse(secretKey), {
      mode: CryptoJS.mode.ECB,
      padding: CryptoJS.pad.Pkcs7,
    });
    return decrypted.toString(CryptoJS.enc.Utf8);
  };

  const buscarNfts = async () => {
    const sdk = new ThirdwebSDK(137);
    const contract= await sdk.getContract(process.env.ACCOUNT_CONTRACT,abiAccount);
    const contractMember = await sdk.getContract(process.env.MEMBERS_CONTRACT,abiMembers);
    const contractPoi = await sdk.getContract(process.env.POI_CONTRACT,abiPoi);
    let arrayTemporal = []
    let arrayTemporalMayor = []
    let arrayNombreRefferal = [];
    let arrayNombreCuentaRefferal = [];
    let arrayIdRefferal = [];
    let arrayVolDirecto = [];
    let arrayVolGeneral = [];

    const rewards = await contract.call("rewards", [idAccount]);
    console.log("rewards", rewards)
    const totalPayedRewards = await contract.call("totalPayedRewards", [idAccount]);
    console.log("totalPayedRewards", totalPayedRewards)
    setTotalRewards(parseInt(rewards._hex, 16)) //CAMBIO: Manejar los decimales según se requiera.
    setTotalPayedRewards(parseInt(totalPayedRewards._hex, 16)) //CAMBIO: Manejar los decimales según se requiera.

    try {
      let i = 0;
      while (true) {
        const arrayInfo = await contract.call("arrayInfo", [wallet, i]);
        console.log(arrayInfo)
        console.log(parseInt(arrayInfo._hex, 16))
        const accountInfo = await contract.call("accountInfo", [parseInt(arrayInfo._hex, 16)]);
        const getDirectVolCount = await contract.call("getDirectVolCount", [parseInt(arrayInfo._hex, 16)]);
        let directVol = 0
        console.log(getDirectVolCount)
        //Directos
        for (let index = 0; index < parseInt(getDirectVolCount._hex, 16); index++) {
          const getDirectVolInfo = await contract.call("getDirectVolInfo", [parseInt(arrayInfo._hex, 16), index]);
          directVol = directVol + parseFloat(ethers.utils.formatUnits(getDirectVolInfo[1], 6)); //CAMBIO
        }

        //Generales
        let generalVol = 0;
        const getCantLevles = await contract.call("getCantLevles", [parseInt(arrayInfo._hex, 16)]);
        for (let index = 0; index < parseInt(getCantLevles._hex, 16); index++) {
          const getDirectVolInfo = await contract.call("getCantPeronInLevel", [parseInt(arrayInfo._hex, 16), index]);
          for (let x = 0; x < parseInt(getDirectVolInfo._hex, 16); x++) {
            const getGlobalVolInfo = await contract.call("getGlobalVolInfo", [parseInt(arrayInfo._hex, 16), index, x]);
            generalVol = generalVol + parseFloat(ethers.utils.formatUnits(getGlobalVolInfo[1], 6)); //CAMBIO
          }
        }
        console.log(directVol)
        console.log(generalVol)
        console.log(accountInfo.idAccountRefferal)
        console.log(parseInt(accountInfo.idAccountRefferal._hex, 16))
        console.log(parseInt(accountInfo.idAccountRefferal.toString(), 10));
        if (parseInt(accountInfo.idAccountRefferal._hex, 16) != 0) {
          console.log(parseInt(accountInfo.idAccountRefferal._hex, 16))
          const ownerOf = await contract.call("ownerOf", [parseInt(accountInfo.idAccountRefferal._hex, 16)]);
          console.log(ownerOf);
          const personalDataMap = await contractPoi.call("personalDataMap", [ownerOf]);
          console.log(personalDataMap);
          const decryptedUsername = decryptData(personalDataMap.encryptedUsername);
          console.log(decryptedUsername)
          
          const accountInfo2 = await contract.call("accountInfo", [parseInt(accountInfo.idAccountRefferal._hex, 16)]);

          arrayNombreRefferal.push(decryptedUsername);
          arrayNombreCuentaRefferal.push(accountInfo2.accountName);
          arrayIdRefferal.push(parseInt(accountInfo2.idAccount._hex, 16));
        } else {
          const ownerOf = await contract.call("ownerOf", [parseInt(accountInfo.idAccountRefferal._hex, 16)]);
          console.log(ownerOf)
          const personalDataMap = await contractPoi.call("personalDataMap", [ownerOf]);
          console.log(personalDataMap)
          const decryptedUsername = decryptData(personalDataMap.encryptedUsername);
          console.log(decryptedUsername)
          
          const accountInfo2 = await contract.call("accountInfo", [parseInt(accountInfo.idAccountRefferal._hex, 16)]);

          arrayNombreRefferal.push("Defily User");
          arrayNombreCuentaRefferal.push(accountInfo2.accountName);
          arrayIdRefferal.push(parseInt(accountInfo2.idAccount._hex, 16));
        }
        arrayTemporal.push(accountInfo)
        arrayVolDirecto.push(directVol)
        arrayVolGeneral.push(generalVol)
        const bestMember = await contractMember.call("bestMember", [parseInt(accountInfo.idAccount._hex, 16)]);
        const memberships = await contractMember.call("memberships", [parseInt(bestMember, 16)]);
        arrayTemporalMayor.push(memberships.membershipTitle)
        i++;
      }
    } catch (error) {
      console.error("Se produjo un error:", error);
    }
    setVolDirect(arrayVolDirecto);
    setVolGlobal(arrayVolGeneral);
    setNombreRefferal(arrayNombreRefferal);
    setNombreCuentaRefferal(arrayNombreCuentaRefferal)
    setIdRefferal(arrayIdRefferal)
    setMembresiaAlta(arrayTemporalMayor)
    setNfts({ status: true, data: arrayTemporal })
  }

  useEffect(() => {
    buscarNfts();
  }, []);

  const convertirTiempo = (fecha: any) => {
    const timestamp = parseInt(fecha, 16); // Convertir el timestamp a número base 10
    const fechaHumana = new Date(timestamp * 1000);
    const fechaFinal = fechaHumana.toLocaleString();
    return fechaFinal;
  };

  const buttonCopyReferral = (account: any) => {
    console.log(parseInt(account.idAccount._hex, 16))
    const baseURL = window.location.origin;
    const referralLink = `${baseURL}?referral=${parseInt(account.idAccount._hex, 16)}`;
    navigator.clipboard.writeText(referralLink);
    setAccountName(account.accountName);
    setIsModalOpen(true);

    setTimeout(() => {
      setIsModalOpen(false);
    }, 2000);
  };
  //THIRDWEBPROVIDER
  return (
 
    <div className="">
      <HeaderPages text={t("My NFTs")} />

      <div className="mt-20 px-6 flex flex-col justify-between min-h-[calc(100vh-300px)]  w-full">
        <div>
          <div>
            {nfts.data.map((account, index) => (
              <div className="rounded-[10px] flex mb-10 relative" key={account.idAccount}>
                <div className="bg-[#9B111E] rounded-s-[10px] w-[10px]"></div>
                <div className="bg-[#ffffff1a] w-2/6 p-2 flex flex-col justify-center border-e border-solid border-[#A9AEB4]">
                  <div className=" ">
                    <h1 className="text-white text-[10px] font-bold">{account.accountName}</h1>
                    <p className="text-[#A9AEB4] text-[8px] mt-1">{membresiaAlta[index].replace(/['`]/g, "")}</p>
                  </div>
                  <div className=" ">
                    <div className="text-white text-[8px] font-bold  mt-1">
                      <span>{t("SINCE")} </span>
                      <span>{convertirTiempo(account.creationData._hex)}</span>
                    </div>
                    <div className="text-[#A9AEB4] text-[8px] mt-1">
                      <span>{t("Sponsor Ref")}: </span>
                      <span>
                      {idRefferal[index]} | {nombreRefferal[index]}
                      </span>
                    </div>
                    <div className="text-[#A9AEB4] text-[8px] mt-1">
                      <span>{t("Account Ref")}: </span>
                      <span>
                        
                        
                      {idRefferal[index]} | {nombreCuentaRefferal[index]}



                      </span>
                    </div>
                  </div>
                </div>

                <div className="py-2 text-center bg-[#ffffff1a] w-4/6 rounded-e-[10px]">
                  <div className="flex items-center justify-center">
                    <div className="mr-2 flex items-center ">
                      <svg xmlns="http://www.w3.org/2000/svg" width="13" height="12" viewBox="0 0 13 12" fill="none">
                        <g clipPath="url(#clip0_7516_3253)">
                          <path
                            d="M4.64583 6.17526H8.35406C8.47922 6.17526 8.58068 6.0738 8.58068 5.94864V4.74965C8.57949 4.09738 8.13679 3.52867 7.50473 3.36754C8.07775 2.81266 8.09243 1.89828 7.53755 1.32529C6.98266 0.752298 6.06829 0.737593 5.4953 1.29248C4.92231 1.84736 4.9076 2.76173 5.46248 3.33472C5.47323 3.34583 5.48417 3.35677 5.4953 3.36754C4.86318 3.52865 4.4204 4.09735 4.41921 4.74965V5.94864C4.41918 6.0738 4.52067 6.17526 4.64583 6.17526ZM6.5 1.34927C7.04472 1.35185 7.48424 1.79552 7.48166 2.34027C7.47909 2.88501 7.03542 3.32451 6.49067 3.32193C5.94775 3.31935 5.509 2.87853 5.509 2.33561C5.51094 1.78984 5.95426 1.34861 6.5 1.34927ZM4.87246 4.74965C4.87304 4.21169 5.30904 3.77571 5.84701 3.77521H7.15285C7.69079 3.77579 8.12671 4.21171 8.12729 4.74965V5.72201H6.49988H4.87246V4.74965ZM3.58541 8.30607C4.15442 7.74952 4.16455 6.83709 3.60801 6.26806C3.05147 5.69902 2.13903 5.68894 1.57 6.24546C1.2932 6.5162 1.13699 6.88693 1.13654 7.27412C1.13654 7.39928 1.23801 7.50074 1.36317 7.50074C1.48834 7.50074 1.5898 7.39928 1.5898 7.27412C1.58925 6.72887 2.03079 6.28642 2.57603 6.28586C3.12128 6.28531 3.56373 6.72685 3.56429 7.27209C3.56484 7.81734 3.1233 8.2598 2.57805 8.26035C2.2308 8.26071 1.90889 8.07858 1.73031 7.78076C1.66565 7.67348 1.52625 7.63892 1.41897 7.70358C1.31169 7.76824 1.27713 7.90764 1.34179 8.01492C1.40648 8.12178 1.48485 8.21975 1.5749 8.30632C0.943396 8.46781 0.501191 9.03621 0.5 9.68807V10.8874C0.500083 11.0126 0.601489 11.114 0.726627 11.1141H4.43471C4.55988 11.1141 4.66134 11.0126 4.66134 10.8874V9.68821C4.6602 9.0359 4.21747 8.46723 3.58541 8.30607ZM4.20809 10.6607H0.953144V9.68821C0.953781 9.15027 1.38976 8.71435 1.92769 8.71377H3.23365C3.77153 8.71441 4.20742 9.1503 4.20809 9.68821V10.6607ZM11.285 10.8873C11.285 11.0125 11.1835 11.1139 11.0583 11.1139H11.026C10.9008 11.1139 10.7993 11.0125 10.7993 10.8873C10.7993 10.7621 10.9008 10.6607 11.026 10.6607H11.0583C11.1834 10.6606 11.2849 10.7622 11.285 10.8873ZM11.4239 8.30607C11.9968 7.75119 12.0115 6.8369 11.4566 6.26399C10.9016 5.69108 9.98738 5.67646 9.41447 6.23137C8.84157 6.78627 8.82697 7.70054 9.38186 8.27345C9.39254 8.2845 9.40343 8.29538 9.41447 8.30607C8.78242 8.46721 8.33968 9.0359 8.33852 9.68818V10.8874C8.33852 11.0126 8.43998 11.114 8.56515 11.114H10.3244C10.4496 11.114 10.551 11.0126 10.551 10.8874C10.551 10.7622 10.4496 10.6608 10.3244 10.6608H8.79178V9.68818C8.79241 9.1503 9.2283 8.71441 9.76621 8.71374H11.0722C11.6101 8.71432 12.0461 9.15022 12.0467 9.68818V10.6606H11.9001C11.775 10.6606 11.6735 10.7621 11.6735 10.8873C11.6735 11.0124 11.775 11.1139 11.9001 11.1139H12.2734C12.3985 11.1138 12.4999 11.0124 12.5 10.8873V9.68815C12.4988 9.03588 12.056 8.46718 11.4239 8.30607ZM10.4192 6.28794C10.9639 6.29043 11.4035 6.73408 11.401 7.2788C11.3985 7.82354 10.9549 8.26309 10.4102 8.2606C9.86715 8.25811 9.42829 7.81717 9.42835 7.27414C9.43032 6.72848 9.87354 6.28736 10.4192 6.28794ZM2.35406 5.11135V4.77607C2.35478 4.11344 2.89171 3.57644 3.55434 3.57564H3.7543C3.87947 3.57564 3.98093 3.6771 3.98093 3.80227C3.98093 3.92743 3.87947 4.02889 3.7543 4.02889H3.55434C3.14194 4.02939 2.80775 4.36363 2.80734 4.77604V5.11133C2.80734 5.23649 2.70588 5.33795 2.58071 5.33795C2.45552 5.33801 2.35406 5.23652 2.35406 5.11135ZM7.80455 9.83661C7.80463 9.96172 7.70325 10.0632 7.57817 10.0632H5.42964C5.30448 10.0632 5.20301 9.96177 5.20301 9.83661C5.20301 9.71144 5.30448 9.60998 5.42964 9.60998H7.57792C7.70308 9.60998 7.80455 9.71144 7.80455 9.83661ZM9.03668 3.80229C9.03668 3.67713 9.13814 3.57567 9.26331 3.57567H9.44513C10.1078 3.57644 10.6447 4.11346 10.6454 4.77609V5.11138C10.6454 5.23655 10.544 5.33801 10.4188 5.33801C10.2936 5.33801 10.1922 5.23655 10.1922 5.11138V4.77609C10.1917 4.36368 9.85757 4.02945 9.44516 4.02895H9.26383C9.13867 4.02923 9.03696 3.92746 9.03668 3.80229Z"
                            fill="white"
                          />
                        </g>
                        <defs>
                          <clipPath id="clip0_7516_3253">
                            <rect width="12" height="12" fill="white" transform="translate(0.5)" />
                          </clipPath>
                        </defs>
                      </svg>
                      <p className="text-white text-[8px] ml-1">{t("DIRECTS VOL")}</p>
                    </div>
                    <div className="flex items-center justify-center">
                      <p className="text-[#7A2FF4] text-[8px] font-bold flex items-center justify-center w-[16px] h-[16px] rounded-full bg-white">
                        {account.numberDirects}
                      </p>
                      <p className="text-[9px] font-bold text-white ml-2">${volDirect[index]}</p>
                    </div>
                  </div>
                  <div className="mt-2 flex items-center justify-center">
                    <div className="mr-2 flex items-center ">
                      <svg xmlns="http://www.w3.org/2000/svg" width="13" height="12" viewBox="0 0 13 12" fill="none">
                        <g clipPath="url(#clip0_7516_3345)">
                          <path
                            fill-rule="evenodd"
                            clip-rule="evenodd"
                            d="M4.92969 10.0552C4.92962 10.2701 4.97386 10.4827 5.05963 10.6797C5.07336 10.4192 5.26559 10.2209 5.59278 10.1332C5.8024 10.0773 6.01687 10.0415 6.23328 10.0264C6.08211 9.96749 5.95622 9.8577 5.87732 9.71594C5.79842 9.57418 5.77146 9.40934 5.80108 9.24983C5.83069 9.09032 5.91504 8.94615 6.03957 8.84216C6.1641 8.73818 6.32101 8.6809 6.48324 8.68021C6.64547 8.67952 6.80286 8.73546 6.92828 8.83838C7.05369 8.94129 7.13926 9.08475 7.17023 9.244C7.20121 9.40325 7.17565 9.56831 7.09796 9.71074C7.02028 9.85316 6.89533 9.96402 6.74466 10.0242C6.96874 10.0387 7.19084 10.0752 7.40776 10.1332C7.7348 10.2209 7.92669 10.419 7.94075 10.6794C8.03354 10.4654 8.07748 10.2333 8.06936 10.0002C8.06125 9.76704 8.00128 9.53862 7.89383 9.33155C7.78638 9.12448 7.63414 8.94394 7.44818 8.80308C7.26222 8.66221 7.0472 8.56455 6.81877 8.5172C6.59033 8.46984 6.35422 8.47397 6.12758 8.5293C5.90095 8.58463 5.68948 8.68976 5.50857 8.83705C5.32765 8.98434 5.18183 9.17009 5.08169 9.3808C4.98156 9.59151 4.92963 9.82188 4.92969 10.0552ZM6.48645 9.69916C6.42284 9.69917 6.36066 9.68032 6.30776 9.64499C6.25486 9.60966 6.21364 9.55943 6.18929 9.50067C6.16494 9.4419 6.15857 9.37723 6.17097 9.31484C6.18338 9.25246 6.21401 9.19515 6.259 9.15017C6.30398 9.10519 6.36129 9.07456 6.42368 9.06216C6.48607 9.04976 6.55073 9.05614 6.6095 9.08049C6.66826 9.10484 6.71848 9.14607 6.75381 9.19897C6.78914 9.25187 6.80799 9.31406 6.80797 9.37767C6.80788 9.46291 6.77397 9.54463 6.71369 9.6049C6.65342 9.66518 6.57169 9.69907 6.48645 9.69916ZM6.5 11.6255C6.33517 11.6257 6.17137 11.5996 6.01473 11.5483V10.8737C6.01473 10.8239 5.99497 10.7762 5.95981 10.7411C5.92465 10.7059 5.87695 10.6862 5.82723 10.6862C5.7775 10.6862 5.72981 10.7059 5.69464 10.7411C5.65948 10.7762 5.63973 10.8239 5.63973 10.8737V11.3678C5.56666 11.3197 5.49767 11.2656 5.43348 11.2062V10.7099C5.43348 10.5893 5.57279 10.5267 5.69 10.4954C5.95042 10.4262 6.21879 10.3916 6.48823 10.3923H6.51369C6.78279 10.3917 7.05081 10.4264 7.31091 10.4954C7.4278 10.5267 7.56727 10.5893 7.56727 10.7099V11.2061C7.50304 11.2655 7.43406 11.3196 7.36102 11.3678V10.8737C7.36102 10.8239 7.34127 10.7762 7.30611 10.7411C7.27094 10.7059 7.22325 10.6862 7.17352 10.6862C7.1238 10.6862 7.0761 10.7059 7.04094 10.7411C7.00578 10.7762 6.98602 10.8239 6.98602 10.8737V11.5481C6.82914 11.5994 6.66513 11.6255 6.50009 11.6255L6.5 11.6255ZM4.55469 10.0552C4.55469 9.67045 4.66878 9.29435 4.88253 8.97444C5.09629 8.65454 5.4001 8.4052 5.75556 8.25797C6.11102 8.11073 6.50216 8.07221 6.87951 8.14727C7.25687 8.22233 7.60349 8.4076 7.87554 8.67966C8.1476 8.95171 8.33287 9.29833 8.40793 9.67569C8.48299 10.053 8.44447 10.4442 8.29723 10.7996C8.15 11.1551 7.90066 11.4589 7.58076 11.6727C7.26085 11.8864 6.88475 12.0005 6.5 12.0005C5.98425 11.9999 5.48979 11.7948 5.1251 11.4301C4.76041 11.0654 4.55527 10.5709 4.55469 10.0552ZM6.5 3.51614C6.66491 3.51614 6.82879 3.49015 6.9856 3.43912V2.76424C6.9856 2.71451 7.00536 2.66682 7.04052 2.63166C7.07568 2.59649 7.12337 2.57674 7.1731 2.57674C7.22283 2.57674 7.27052 2.59649 7.30568 2.63166C7.34085 2.66682 7.3606 2.71451 7.3606 2.76424V3.25839C7.43368 3.21025 7.50267 3.15616 7.56685 3.09668V2.60032C7.56685 2.48008 7.42735 2.4175 7.3103 2.38598C6.77876 2.24845 6.22096 2.24845 5.68941 2.38598C5.57253 2.41746 5.43303 2.48008 5.43303 2.60032V3.09663C5.49725 3.15608 5.56623 3.21017 5.63928 3.25835V2.76424C5.63928 2.71451 5.65904 2.66682 5.6942 2.63166C5.72936 2.59649 5.77705 2.57674 5.82678 2.57674C5.87651 2.57674 5.9242 2.59649 5.95936 2.63166C5.99453 2.66682 6.01428 2.71451 6.01428 2.76424V3.43872C6.17104 3.49003 6.33494 3.51614 6.49988 3.51607L6.5 3.51614ZM6.83541 1.26829C6.83539 1.20471 6.81652 1.14256 6.78118 1.08971C6.74584 1.03685 6.69562 0.99566 6.63687 0.971342C6.57812 0.947023 6.51349 0.940668 6.45113 0.953081C6.38877 0.965495 6.33149 0.996118 6.28654 1.04108C6.24158 1.08604 6.21097 1.14333 6.19856 1.20569C6.18616 1.26805 6.19252 1.33268 6.21685 1.39143C6.24118 1.45017 6.28237 1.50038 6.33524 1.53571C6.3881 1.57105 6.45025 1.58991 6.51383 1.58993C6.5991 1.58985 6.68087 1.55593 6.74115 1.49562C6.80143 1.4353 6.83531 1.35352 6.83534 1.26825L6.83541 1.26829ZM4.92969 1.94592C4.92958 1.71259 4.98147 1.48218 5.08158 1.27142C5.1817 1.06067 5.32752 0.874872 5.50844 0.727542C5.68937 0.580211 5.90085 0.475051 6.12752 0.419706C6.35418 0.36436 6.59033 0.360221 6.8188 0.40759C7.04726 0.454958 7.2623 0.552643 7.44828 0.693543C7.63426 0.834442 7.7865 1.01501 7.89393 1.22213C8.00137 1.42925 8.0613 1.65771 8.06937 1.89089C8.07744 2.12407 8.03345 2.35613 7.94059 2.57018C7.92669 2.30979 7.73434 2.11153 7.40759 2.02408C7.19797 1.96807 6.98347 1.93223 6.76702 1.91707C6.91799 1.85806 7.04364 1.74825 7.12232 1.60654C7.20099 1.46484 7.22777 1.30012 7.19804 1.14079C7.1683 0.981459 7.08391 0.837493 6.95942 0.733706C6.83492 0.629919 6.67812 0.572814 6.51604 0.572235C6.35396 0.571656 6.19675 0.627638 6.07152 0.730533C5.94629 0.833427 5.86087 0.976787 5.83 1.1359C5.79912 1.29502 5.82473 1.45992 5.90239 1.60218C5.98005 1.74445 6.10492 1.85516 6.25545 1.91524C6.03141 1.92944 5.80934 1.9659 5.59252 2.02408C5.2655 2.11148 5.07327 2.30974 5.05953 2.57018C4.97371 2.37325 4.92951 2.16073 4.92969 1.94592ZM8.44545 1.94592C8.44543 2.33065 8.33132 2.70674 8.11756 3.02663C7.9038 3.34652 7.59998 3.59583 7.24453 3.74306C6.88908 3.89028 6.49795 3.92879 6.12061 3.85373C5.74327 3.77867 5.39666 3.5934 5.12461 3.32135C4.85255 3.04931 4.66728 2.7027 4.59222 2.32536C4.51715 1.94801 4.55566 1.55689 4.70288 1.20143C4.85009 0.845977 5.09941 0.542158 5.41929 0.328393C5.73918 0.114627 6.11526 0.000516094 6.5 0.000488281C7.01578 0.00104668 7.51027 0.206194 7.87497 0.570915C8.23967 0.935637 8.44479 1.43014 8.44531 1.94592H8.44545ZM12.1251 6.00061C12.1252 5.7673 12.0733 5.53691 11.9731 5.3262C11.873 5.11548 11.7271 4.92973 11.5462 4.78244C11.3652 4.63515 11.1538 4.53003 10.9271 4.47472C10.7004 4.41941 10.4643 4.4153 10.2359 4.46269C10.0074 4.51008 9.79242 4.60778 9.60647 4.74868C9.42051 4.88958 9.26829 5.07014 9.16087 5.27725C9.05345 5.48435 8.99352 5.71279 8.98545 5.94596C8.97739 6.17912 9.02137 6.41116 9.11422 6.62519C9.12812 6.36464 9.32047 6.16638 9.64754 6.07865C9.85719 6.02269 10.0717 5.98697 10.2882 5.97196C10.137 5.91311 10.0111 5.80334 9.93221 5.66158C9.8533 5.51983 9.82634 5.35498 9.85597 5.19548C9.8856 5.03597 9.96997 4.89181 10.0945 4.78785C10.2191 4.68389 10.376 4.62666 10.5382 4.62603C10.7005 4.62539 10.8578 4.6814 10.9832 4.78438C11.1086 4.88736 11.194 5.03086 11.2249 5.19014C11.2558 5.34941 11.2301 5.51446 11.1523 5.65682C11.0745 5.79919 10.9495 5.90994 10.7988 5.96997C11.023 5.98437 11.2454 6.02077 11.4625 6.07865C11.7894 6.16605 11.9813 6.36431 11.9954 6.62475C12.081 6.4278 12.1252 6.21531 12.125 6.00054L12.1251 6.00061ZM10.8627 5.32289C10.8627 5.38653 10.8439 5.44875 10.8085 5.50169C10.7732 5.55462 10.723 5.59589 10.6642 5.62027C10.6054 5.64464 10.5407 5.65104 10.4783 5.63863C10.4159 5.62623 10.3585 5.5956 10.3135 5.5506C10.2685 5.5056 10.2379 5.44827 10.2255 5.38585C10.2131 5.32343 10.2194 5.25873 10.2438 5.19994C10.2682 5.14115 10.3094 5.09091 10.3624 5.05558C10.4153 5.02025 10.4775 5.0014 10.5412 5.00144C10.6264 5.00159 10.7081 5.03551 10.7683 5.09578C10.8286 5.15604 10.8625 5.23773 10.8627 5.32296V5.32289ZM10.5545 7.57089C10.3897 7.57085 10.226 7.5448 10.0693 7.49369V6.81902C10.0693 6.76929 10.0495 6.7216 10.0144 6.68644C9.97919 6.65127 9.9315 6.63152 9.88177 6.63152C9.83205 6.63152 9.78435 6.65127 9.74919 6.68644C9.71403 6.7216 9.69427 6.76929 9.69427 6.81902V7.31301C9.62111 7.26509 9.55211 7.21109 9.48802 7.15157V6.65493C9.48802 6.5347 9.62734 6.47212 9.74438 6.44076C10.0048 6.37164 10.2732 6.33697 10.5426 6.33764H10.5684C10.8374 6.33708 11.1053 6.37175 11.3653 6.44076C11.4823 6.47207 11.6218 6.5347 11.6218 6.65493V7.15125C11.5575 7.21068 11.4884 7.26476 11.4153 7.31296V6.81902C11.4153 6.76929 11.3956 6.7216 11.3604 6.68644C11.3253 6.65127 11.2776 6.63152 11.2278 6.63152C11.1781 6.63152 11.1304 6.65127 11.0953 6.68644C11.0601 6.7216 11.0403 6.76929 11.0403 6.81902V7.49353C10.8834 7.54477 10.7194 7.57087 10.5544 7.57087L10.5545 7.57089ZM12.5 6.00058C12.5 6.38533 12.3859 6.76144 12.1721 7.08134C11.9584 7.40124 11.6546 7.65058 11.2991 7.79782C10.9436 7.94505 10.5525 7.98358 10.1752 7.90852C9.7978 7.83346 9.45118 7.64818 9.17912 7.37613C8.90706 7.10407 8.72179 6.75745 8.64673 6.38009C8.57167 6.00274 8.61019 5.6116 8.75743 5.25614C8.90466 4.90068 9.154 4.59687 9.47391 4.38311C9.79381 4.16936 10.1699 4.05527 10.5547 4.05527C11.0704 4.0558 11.5649 4.26091 11.9297 4.62561C12.2944 4.99031 12.4995 5.4848 12.5001 6.00058H12.5ZM0.874977 6.00058C0.874891 6.21544 0.919126 6.42801 1.00491 6.625C1.01865 6.36461 1.21088 6.16636 1.53807 6.07863C1.74767 6.0227 1.96215 5.98697 2.17857 5.97194C2.02738 5.91307 1.90147 5.80328 1.82257 5.66151C1.74366 5.51975 1.71671 5.35489 1.74634 5.19537C1.77598 5.03585 1.86036 4.89168 1.98493 4.78771C2.10949 4.68375 2.26643 4.62652 2.42867 4.62589C2.59092 4.62525 2.7483 4.68126 2.87367 4.78425C2.99904 4.88724 3.08454 5.03075 3.11543 5.19003C3.14631 5.34931 3.12064 5.51437 3.04284 5.65675C2.96505 5.79913 2.84 5.9099 2.68927 5.96995C2.91356 5.98433 3.13589 6.02073 3.35305 6.07863C3.67974 6.16603 3.87198 6.36428 3.88588 6.62472C3.97862 6.4107 4.02253 6.17871 4.01439 5.94559C4.00625 5.71248 3.94628 5.48411 3.83883 5.27708C3.73138 5.07005 3.57916 4.88955 3.39322 4.74872C3.20729 4.60788 2.99231 4.51024 2.76391 4.46289C2.53551 4.41554 2.29943 4.41967 2.07283 4.47499C1.84623 4.5303 1.6348 4.6354 1.4539 4.78266C1.27301 4.92991 1.12719 5.11562 1.02706 5.32629C0.92692 5.53695 0.874976 5.76728 0.875 6.00054L0.874977 6.00058ZM2.75326 5.32293C2.75329 5.38656 2.73446 5.44876 2.69915 5.50168C2.66383 5.5546 2.61361 5.59586 2.55485 5.62024C2.49608 5.64463 2.4314 5.65103 2.369 5.63865C2.30659 5.62628 2.24925 5.59567 2.20424 5.55071C2.15923 5.50574 2.12856 5.44844 2.11611 5.38605C2.10367 5.32365 2.11 5.25897 2.13432 5.20018C2.15864 5.14138 2.19984 5.09112 2.25272 5.05575C2.30561 5.02037 2.36779 5.00147 2.43141 5.00144C2.5167 5.00148 2.59849 5.03536 2.65883 5.09564C2.71917 5.15592 2.75313 5.23765 2.75326 5.32293ZM2.44531 7.57089C2.28045 7.57086 2.11662 7.54481 1.95987 7.49369V6.81902C1.95987 6.76929 1.94012 6.7216 1.90496 6.68644C1.86979 6.65127 1.8221 6.63152 1.77237 6.63152C1.72265 6.63152 1.67496 6.65127 1.63979 6.68644C1.60463 6.7216 1.58487 6.76929 1.58487 6.81902V7.31301C1.51171 7.26509 1.44272 7.21109 1.37862 7.15157V6.65493C1.37862 6.5347 1.51777 6.47212 1.63501 6.44076C1.89962 6.37061 2.17238 6.33593 2.44613 6.33764C2.71946 6.33558 2.99182 6.37026 3.2559 6.44076C3.37309 6.47207 3.51245 6.5347 3.51245 6.65493V7.15125C3.44817 7.21063 3.3792 7.26471 3.3062 7.31296V6.81902C3.3062 6.76929 3.28644 6.7216 3.25128 6.68644C3.21611 6.65127 3.16842 6.63152 3.1187 6.63152C3.06897 6.63152 3.02128 6.65127 2.98611 6.68644C2.95095 6.7216 2.9312 6.76929 2.9312 6.81902V7.49353C2.77432 7.54475 2.61034 7.57086 2.44531 7.57089ZM0.5 6.00058C0.5 5.61584 0.614088 5.23974 0.827836 4.91984C1.04158 4.59993 1.34539 4.3506 1.70085 4.20336C2.0563 4.05612 2.44743 4.01759 2.82478 4.09264C3.20213 4.16769 3.54875 4.35295 3.82081 4.625C4.09288 4.89704 4.27816 5.24365 4.35323 5.621C4.42831 5.99834 4.3898 6.38948 4.24258 6.74494C4.09536 7.1004 3.84605 7.40423 3.52616 7.61799C3.20627 7.83176 2.83017 7.94587 2.44543 7.94589C1.92969 7.94527 1.43525 7.74012 1.07057 7.37544C0.705889 7.01076 0.500737 6.51632 0.500117 6.00058H0.5ZM9.00716 10.1732C9.04248 10.1731 9.07707 10.1631 9.10695 10.1442C9.72688 9.75223 10.2518 9.22721 10.6437 8.60723C10.6691 8.5652 10.6769 8.51492 10.6656 8.46718C10.6542 8.41945 10.6246 8.37806 10.5831 8.35189C10.5416 8.32572 10.4915 8.31687 10.4436 8.32722C10.3956 8.33758 10.3536 8.36632 10.3266 8.40729C9.96455 8.98006 9.47949 9.46501 8.90663 9.82692C8.87221 9.84864 8.84579 9.88096 8.83134 9.91901C8.8169 9.95707 8.81522 9.99878 8.82656 10.0379C8.83791 10.077 8.86165 10.1113 8.89422 10.1357C8.92679 10.1601 8.96641 10.1733 9.00711 10.1732H9.00716ZM2.67355 8.40729C2.66052 8.38619 2.64344 8.36788 2.6233 8.35342C2.60316 8.33896 2.58035 8.32864 2.55619 8.32305C2.53203 8.31746 2.507 8.31671 2.48256 8.32085C2.45811 8.325 2.43472 8.33394 2.41376 8.34718C2.39279 8.36041 2.37465 8.37767 2.36039 8.39796C2.34614 8.41825 2.33604 8.44116 2.33069 8.46537C2.32535 8.48959 2.32485 8.51462 2.32924 8.53902C2.33363 8.56343 2.34281 8.58672 2.35625 8.60756C2.74831 9.22741 3.27332 9.75231 3.89326 10.1442C3.92308 10.1632 3.95772 10.1733 3.99308 10.1732C4.03369 10.1732 4.07319 10.16 4.10565 10.1355C4.1381 10.1111 4.16175 10.0768 4.17304 10.0378C4.18433 9.99883 4.18265 9.9572 4.16826 9.91923C4.15386 9.88126 4.12752 9.84899 4.0932 9.82727C3.52051 9.46512 3.03556 8.98007 2.67355 8.40729ZM3.89323 1.85683C3.27331 2.24877 2.74831 2.77367 2.35625 3.39351C2.32969 3.43559 2.32094 3.4865 2.33191 3.53503C2.34289 3.58356 2.37269 3.62575 2.41477 3.65231C2.45685 3.67887 2.50776 3.68762 2.55629 3.67665C2.60483 3.66567 2.64701 3.63586 2.67357 3.59379C3.03558 3.02101 3.52051 2.53597 4.0932 2.17382C4.11493 2.16113 4.13388 2.1442 4.14892 2.12403C4.16396 2.10387 4.17479 2.08088 4.18077 2.05644C4.18674 2.032 4.18773 2.0066 4.18369 1.98177C4.17964 1.95694 4.17064 1.93317 4.15721 1.91189C4.14379 1.89061 4.12622 1.87225 4.10556 1.8579C4.08489 1.84356 4.06155 1.83351 4.03692 1.82838C4.01229 1.82324 3.98687 1.82311 3.96219 1.828C3.93751 1.83289 3.91407 1.84269 3.89326 1.85683H3.89323ZM10.6437 3.39351C10.6569 3.41434 10.6658 3.43755 10.67 3.46182C10.6742 3.48609 10.6735 3.51095 10.6681 3.53497C10.6627 3.559 10.6526 3.58172 10.6384 3.60183C10.6242 3.62195 10.6061 3.63908 10.5853 3.65223C10.5645 3.66538 10.5413 3.6743 10.517 3.67848C10.4927 3.68266 10.4679 3.68201 10.4438 3.67659C10.4198 3.67116 10.3971 3.66105 10.377 3.64685C10.3569 3.63264 10.3397 3.61461 10.3266 3.59379C9.96437 3.02107 9.47935 2.53605 8.90663 2.17382C8.88557 2.16079 8.86729 2.14371 8.85286 2.12357C8.83844 2.10343 8.82814 2.08064 8.82258 2.0565C8.81701 2.03236 8.81629 2.00735 8.82044 1.98293C8.8246 1.95851 8.83355 1.93515 8.84678 1.91421C8.86002 1.89327 8.87727 1.87516 8.89754 1.86092C8.91782 1.84669 8.94071 1.83661 8.9649 1.83128C8.9891 1.82594 9.0141 1.82545 9.03849 1.82984C9.06287 1.83422 9.08614 1.8434 9.10695 1.85683C9.72675 2.24887 10.2517 2.77375 10.6437 3.39351Z"
                            fill="white"
                          />
                        </g>
                        <defs>
                          <clipPath id="clip0_7516_3345">
                            <rect width="12" height="12" fill="white" transform="translate(0.5)" />
                          </clipPath>
                        </defs>
                      </svg>
                      <p className="text-white text-[8px] ml-1">{t("GLOBAL VOL")}</p>
                    </div>
                    <div className="flex items-center justify-center">
                      <p className="text-[#7A2FF4] text-[8px] font-bold flex items-center justify-center w-[16px] h-[16px] rounded-full bg-white">
                        {account.numberGlobal}
                      </p>
                      <p className="text-[9px] font-bold text-white ml-2">${volGlobal[index]}</p>
                    </div>
                  </div>
                </div>

                <div className="absolute -bottom-5 -right-1 w-36 flex items-center justify-center">
                  <button
                    className="rounded-full bg-[#7A2FF4] w-8 h-8 mr-2 flex items-center justify-center"
                    onClick={() => buttonCopyReferral(account)}
                  >
                    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18" fill="none">
                      <path
                        d="M9.08238 11.5426L6.17238 14.4526C5.82006 14.7926 5.34952 14.9826 4.85988 14.9826C4.37023 14.9826 3.8997 14.7926 3.54738 14.4526C3.37458 14.2805 3.23747 14.0759 3.14392 13.8507C3.05036 13.6255 3.0022 13.384 3.0022 13.1401C3.0022 12.8962 3.05036 12.6547 3.14392 12.4295C3.23747 12.2042 3.37458 11.9997 3.54738 11.8276L6.45738 8.91757C6.5986 8.77634 6.67795 8.5848 6.67795 8.38507C6.67795 8.18534 6.5986 7.9938 6.45738 7.85257C6.31615 7.71134 6.1246 7.632 5.92488 7.632C5.72515 7.632 5.53361 7.71134 5.39238 7.85257L2.48238 10.7701C1.89614 11.4082 1.57909 12.2481 1.59743 13.1144C1.61577 13.9807 1.96809 14.8064 2.5808 15.4191C3.19351 16.0319 4.01925 16.3842 4.88556 16.4025C5.75188 16.4209 6.59178 16.1038 7.22988 15.5176L10.1474 12.6076C10.2886 12.4663 10.3679 12.2748 10.3679 12.0751C10.3679 11.8753 10.2886 11.6838 10.1474 11.5426C10.0061 11.4013 9.8146 11.322 9.61488 11.322C9.41515 11.322 9.22361 11.4013 9.08238 11.5426ZM15.5174 2.48257C14.8865 1.85558 14.0331 1.50366 13.1436 1.50366C12.2541 1.50366 11.4008 1.85558 10.7699 2.48257L7.85238 5.39257C7.78245 5.4625 7.72698 5.54552 7.68913 5.63688C7.65129 5.72825 7.63181 5.82618 7.63181 5.92507C7.63181 6.02397 7.65129 6.12189 7.68913 6.21326C7.72698 6.30462 7.78245 6.38764 7.85238 6.45757C7.92231 6.5275 8.00532 6.58297 8.09669 6.62082C8.18806 6.65866 8.28598 6.67814 8.38488 6.67814C8.48377 6.67814 8.5817 6.65866 8.67306 6.62082C8.76443 6.58297 8.84745 6.5275 8.91738 6.45757L11.8274 3.54757C12.1797 3.20754 12.6502 3.01751 13.1399 3.01751C13.6295 3.01751 14.1001 3.20754 14.4524 3.54757C14.6252 3.71969 14.7623 3.92423 14.8558 4.14946C14.9494 4.37469 14.9976 4.61618 14.9976 4.86007C14.9976 5.10396 14.9494 5.34545 14.8558 5.57068C14.7623 5.79591 14.6252 6.00046 14.4524 6.17257L11.5424 9.08257C11.4721 9.15229 11.4163 9.23524 11.3782 9.32664C11.3401 9.41803 11.3205 9.51606 11.3205 9.61507C11.3205 9.71408 11.3401 9.81211 11.3782 9.9035C11.4163 9.9949 11.4721 10.0778 11.5424 10.1476C11.6121 10.2179 11.6951 10.2737 11.7864 10.3117C11.8778 10.3498 11.9759 10.3694 12.0749 10.3694C12.1739 10.3694 12.2719 10.3498 12.3633 10.3117C12.4547 10.2737 12.5377 10.2179 12.6074 10.1476L15.5174 7.23007C16.1444 6.59916 16.4963 5.7458 16.4963 4.85632C16.4963 3.96684 16.1444 3.11349 15.5174 2.48257ZM6.62238 11.3776C6.69246 11.4471 6.77557 11.5021 6.86695 11.5394C6.95833 11.5767 7.05617 11.5956 7.15488 11.5951C7.25358 11.5956 7.35143 11.5767 7.44281 11.5394C7.53419 11.5021 7.6173 11.4471 7.68738 11.3776L11.3774 7.68757C11.5186 7.54634 11.5979 7.3548 11.5979 7.15507C11.5979 6.95534 11.5186 6.7638 11.3774 6.62257C11.2361 6.48134 11.0446 6.402 10.8449 6.402C10.6452 6.402 10.4536 6.48134 10.3124 6.62257L6.62238 10.3126C6.55208 10.3823 6.49629 10.4652 6.45821 10.5566C6.42013 10.648 6.40053 10.7461 6.40053 10.8451C6.40053 10.9441 6.42013 11.0421 6.45821 11.1335C6.49629 11.2249 6.55208 11.3078 6.62238 11.3776Z"
                        fill="white"
                      />
                    </svg>
                  </button>

                  <Link href={`/myAccounts/renameAccount?id=${parseInt(account.idAccount._hex, 16)}&name=${account.accountName}`}>
                    <button className="rounded-full bg-[#7A2FF4] w-8 h-8 flex items-center justify-center">
                      <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 12 12" fill="none">
                        <path
                          d="M11.5502 2.50489L9.49522 0.449893C9.22702 0.197965 8.87556 0.0534125 8.50772 0.0437325C8.13988 0.0340524 7.78131 0.15992 7.50022 0.397394L0.750223 7.14739C0.507797 7.39187 0.356851 7.7123 0.322722 8.05489L0.000222526 11.1824C-0.00988075 11.2922 0.00437327 11.403 0.0419684 11.5067C0.0795636 11.6104 0.139574 11.7045 0.217723 11.7824C0.287803 11.8519 0.370915 11.9069 0.462293 11.9442C0.553671 11.9815 0.651518 12.0005 0.750223 11.9999H0.817723L3.94522 11.7149C4.28782 11.6808 4.60825 11.5298 4.85272 11.2874L11.6027 4.53739C11.8647 4.26062 12.0063 3.89127 11.9965 3.51029C11.9866 3.12932 11.8261 2.76777 11.5502 2.50489ZM3.81022 10.2149L1.56022 10.4249L1.76272 8.17489L6.00022 3.98989L8.02522 6.01489L3.81022 10.2149ZM9.00022 5.00989L6.99022 2.99989L8.45272 1.49989L10.5002 3.54739L9.00022 5.00989Z"
                          fill="white"
                        />
                      </svg>
                    </button>
                  </Link>

                  <Link href={`/myAccounts/transferAccount?id=${parseInt(account.idAccount._hex, 16)}&name=${account.accountName}`}>
                    <button className="rounded-full bg-white ml-2 w-8 h-8 flex items-center justify-center">
                      <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18" fill="none">
                        <path
                          d="M16.3503 1.75885C16.0815 1.48998 15.6883 1.39829 15.3046 1.52766L4.84889 5.52423C4.4332 5.67048 4.16377 6.06254 4.17839 6.50354C4.19133 6.93273 4.47145 7.29835 4.87927 7.42379L9.05527 9.05504L10.6865 13.2305C10.8114 13.6377 11.1759 13.9179 11.6051 13.9319C11.6169 13.9319 11.6276 13.9319 11.6388 13.9319C12.0714 13.9319 12.45 13.6614 12.5821 13.2687L16.5894 2.78373C16.712 2.42091 16.6203 2.02829 16.3503 1.75885ZM11.6405 12.5819L10.1257 8.70348L11.6034 7.22523C11.8233 7.00529 11.8233 6.64923 11.6034 6.42985C11.3835 6.20991 11.028 6.20991 10.808 6.42985L9.29658 7.94129L5.52783 6.46923L15.4228 2.68641L11.6405 12.5819ZM8.27283 10.5226L3.21033 15.5851C3.10064 15.6948 2.95664 15.7499 2.81264 15.7499C2.66864 15.7499 2.52464 15.6948 2.41495 15.5851C2.19502 15.3652 2.19502 15.0097 2.41495 14.7897L7.47745 9.72723C7.69739 9.50729 8.05289 9.50729 8.27283 9.72723C8.49277 9.94716 8.49277 10.3027 8.27283 10.5226ZM9.39783 13.3351L7.14783 15.5851C7.03814 15.6948 6.89414 15.7499 6.75014 15.7499C6.60614 15.7499 6.46214 15.6948 6.35245 15.5851C6.13252 15.3652 6.13252 15.0097 6.35245 14.7897L8.60245 12.5397C8.82239 12.3198 9.17789 12.3198 9.39783 12.5397C9.61777 12.7597 9.61777 13.1152 9.39783 13.3351ZM2.41495 11.6476C2.19502 11.4277 2.19502 11.0722 2.41495 10.8522L4.66495 8.60223C4.88489 8.38229 5.24039 8.38229 5.46033 8.60223C5.68027 8.82216 5.68027 9.17766 5.46033 9.3976L3.21033 11.6476C3.10064 11.7573 2.95664 11.8124 2.81264 11.8124C2.66864 11.8124 2.52464 11.7573 2.41495 11.6476Z"
                          fill="#7A2FF4"
                        />
                      </svg>
                    </button>
                  </Link>
                </div>
              </div>
            ))}
          </div>
          <ModalComponent isOpen={isModalOpen} setIsOpen={setIsModalOpen} classBody="bg-white w-[320px] h-auto rounded-xl">
            <div className="container-modal">
              <div className="p-6">
                <p className="text-4 text-[#554D77] text-center">
                  {t("You successfully copied the referral link for the account")} {accountName}!
                </p>
              </div>
            </div>
          </ModalComponent>

          <div className="mt-12">
            <ButtonPrimary text={t("Create New NFT")} onClickFn={ButtonCreateAccount} />
            <br></br>
          <br></br>
          <br></br>
            <center>  <p style={{color:"white"}}>Claim available:   $ {totalRewards / 1000000}</p>{" "}
            <Web3Button 
                        contractAddress={process.env.ACCOUNT_CONTRACT}
                        contractAbi={abiAccount}
                        action={async (contract: any) => {
                          const idAccount = localStorage.getItem('idAccount');
                          await contract.call("claimNftReward", [idAccount]);
                        }}
                        onSuccess={async() => {
                          const sdk = new ThirdwebSDK(137);
                          const contract = await sdk.getContract(process.env.ACCOUNT_CONTRACT,abiAccount);
                          const rewards = await contract.call("rewards", [idAccount]);
                          console.log("rewards", rewards)
                          const totalPayedRewards = await contract.call("totalPayedRewards", [idAccount]);
                          console.log("totalPayedRewards", totalPayedRewards)
                          setTotalRewards(parseInt(rewards._hex, 16)) //CAMBIO: Manejar los decimales según se requiera.
                          setTotalPayedRewards(parseInt(totalPayedRewards._hex, 16)) //CAMBIO: Manejar los decimales según se requiera.
                        }}
                        onError={(error) =>{
                          
                        }}
                        className="buttonPrimary"
                      >
                        {t("Claim Rewards")}
              </Web3Button>
              <br></br>
                           <p style={{color:"white", borderTop:"5px"}}>Total Claimed:   $ {totalPayedRewards / 1000000}</p>{" "}
              </center>
          </div>

        </div>

        <div className="px-4 py-1 flex items-center rounded-lg border border-solid border-white">
          <svg xmlns="http://www.w3.org/2000/svg" width="55" height="55" viewBox="0 0 24 24" fill="none">
            <g clipPath="url(#clip0_7516_2833)">
              <path
                d="M17.4105 0.4395C17.2711 0.300024 17.1055 0.189413 16.9233 0.113999C16.741 0.0385838 16.5457 -0.00015458 16.3485 4.6356e-07H7.6515C7.254 4.6356e-07 6.8715 0.1575 6.591 0.4395L0.441003 6.591C0.300933 6.72976 0.189821 6.89496 0.114117 7.07701C0.0384126 7.25906 -0.000376026 7.45434 2.7475e-06 7.6515V16.35C2.7475e-06 16.7475 0.157503 17.13 0.439503 17.4105L6.5895 23.562C6.8715 23.8425 7.2525 24 7.6515 24H16.35C16.7475 24 17.13 23.8425 17.4105 23.5605L23.5605 17.409C23.8425 17.1285 24 16.7475 24 16.3485V7.6515C24 7.254 23.8425 6.8715 23.5605 6.591L17.4105 0.4395ZM22.5 16.3485L16.3485 22.5H7.6515L1.5 16.3485V7.6515L7.6515 1.5H16.35L22.5 7.6515V16.3485ZM12 4.5C11.6022 4.5 11.2206 4.65804 10.9393 4.93934C10.658 5.22064 10.5 5.60218 10.5 6V13.5C10.5 13.8978 10.658 14.2794 10.9393 14.5607C11.2206 14.842 11.6022 15 12 15C12.3978 15 12.7794 14.842 13.0607 14.5607C13.342 14.2794 13.5 13.8978 13.5 13.5V6C13.5 5.60218 13.342 5.22064 13.0607 4.93934C12.7794 4.65804 12.3978 4.5 12 4.5ZM10.5 18C10.5 18.197 10.5388 18.392 10.6142 18.574C10.6896 18.756 10.8001 18.9214 10.9393 19.0607C11.0786 19.1999 11.244 19.3104 11.426 19.3858C11.608 19.4612 11.803 19.5 12 19.5C12.3978 19.5 12.7794 19.342 13.0607 19.0607C13.2 18.9214 13.3104 18.756 13.3858 18.574C13.4612 18.392 13.5 18.197 13.5 18C13.5 17.6022 13.342 17.2206 13.0607 16.9393C12.7794 16.658 12.3978 16.5 12 16.5C11.6022 16.5 11.2206 16.658 10.9393 16.9393C10.658 17.2206 10.5 17.6022 10.5 18Z"
                fill="#FF4C5A"
              />
            </g>
            <defs>
              <clipPath id="clip0_7516_2833">
                <rect width="24" height="24" fill="white" />
              </clipPath>
            </defs>
          </svg>

          <p className="ml-4 text-[10px] text-white leading-3">
            {t("Once the account has been transferred it cannot be recovered and will be transferred to the new registrant")}
          </p>
        </div>
      </div>
    </div>
  );
};

export default MyAccounts;
